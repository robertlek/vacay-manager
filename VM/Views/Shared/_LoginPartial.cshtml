@using Microsoft.AspNetCore.Identity

@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager
@inject VM.Storage.DataAccess.Context _context;

<ul class="navbar-nav">
    @if (SignInManager.IsSignedIn(User))
    {
        <li class="nav-item">
            <a id="manage" class="nav-link text-white" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">
                <i class="bi bi-person-circle mx-1"></i>
                <span>@_context.Employees.First(user => user.UserName.Equals(@UserManager.GetUserName(User))).FirstName</span>
            </a>
        </li>
        <li class="nav-item">
            <form id="logoutForm" class="form-inline" asp-area="Identity" asp-page="/Account/Logout"
                asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
                <button id="logout" type="submit" class="nav-link btn btn-link text-white">
                    <i class="bi bi-door-open-fill mx-1"></i>
                    <span>Logout</span>
                </button>
            </form>
        </li>
    }
    else
    {
        <li class="nav-item">
            <a class="nav-link text-white" id="login" asp-area="Identity" asp-page="/Account/Login">
                <i class="bi bi-shield-lock-fill mx-1"></i>
                <span>Login</span>
            </a>
        </li>
    }
</ul>
